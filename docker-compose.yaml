services:
  postgres:
    build:
      context: https://github.com/pgvector/pgvector.git#master
      dockerfile: Dockerfile
    env_file:
      - .env  # Specify the path to your environment file here
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d  # Mount the local sql directory to the initialization directory
    networks:
      - app_network  # Assign the network to the postgres service

  core:
    image: aishe.ai/core:latest
    # image: europe-west10-docker.pkg.dev/aisheai/docker-images/core:latest
    working_dir: /code/app  # Set the working directory to /app
    env_file:
      - .env  # Specify the path to your environment file here
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    # labels:
      # - "traefik.enable=true"
      # - "traefik.http.services.core.loadbalancer.server.port=8888"
      # - "traefik.http.routers.core.rule=Host(``)"
      # - "traefik.http.routers.core.entrypoints=websecure"
      # - "traefik.http.routers.core.tls.certresolver=myresolver"


  ngrok:
    image: ngrok/ngrok:latest
    env_file:
      - .env  # Specify the path to your environment file here
    entrypoint:
      - /bin/sh
      - -c
      - |
        echo "version: 2" > /tmp/ngrok.yml  &&
        echo "console_ui: true" >> /tmp/ngrok.yml  &&
        echo "tunnels:" >> /tmp/ngrok.yml &&
        echo "  http:" >> /tmp/ngrok.yml &&
        echo "    proto: http" >> /tmp/ngrok.yml &&
        echo "    addr: core:80" >> /tmp/ngrok.yml &&
        echo "    domain: $$NGROK_HOSTNAME" >> /tmp/ngrok.yml &&
        ngrok start --all --config /tmp/ngrok.yml
    ports:
      - "4040:4040"  # Expose the web inspector on the host machine at localhost:4040
    depends_on:
      - core
    networks:
      - app_network

networks:
  app_network:  # Define a network
    driver: bridge

volumes:
  postgres_data:
