include:
- ../airbyte-pgvector/docker-compose.yaml

services:
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    command:
      # - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - airbyte_internal
      - airbyte_public
      - default
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.traefik.rule=Host(``)"
    #   - "traefik.http.routers.traefik.entrypoints=websecure"
    #   - "traefik.http.routers.traefik.tls.certresolver=myresolver"
    #   - "traefik.http.routers.traefik.service=api@internal"

  database:
    build:
      context: https://github.com/pgvector/pgvector.git#master
      dockerfile: Dockerfile
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s
    env_file:
      - .env  # Specify the path to your environment file here
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d  # Mount the local sql directory to the initialization directory

  core:
    image: ${CORE_IMAGE}
    working_dir: /code/app  # Set the working directory to /app
    env_file:
      - .env  # Specify the path to your environment file here
    ports:
      - "${CORE_PORT}:8888"
    volumes:
      - .:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.core.loadbalancer.server.port=${CORE_PORT}"
      - "traefik.http.routers.core.rule=Host(`${CORE_DOMAIN}`)"
      - "traefik.http.routers.core.entrypoints=websecure"
      - "traefik.http.routers.core.tls.certresolver=myresolver"

  langfuse-server:
    image: ${LANGFUSE_IMAGE}
    depends_on:
      - database
      - core
    ports:
      - "${LANGFUSE_PORT}:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${PGVECTOR_HOST}:${PGVECTOR_PORT}/postgres
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysalt
      - NEXTAUTH_URL=https://${LANGFUSE_DOMAIN}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-false}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.langfuse-server.loadbalancer.server.port=${LANGFUSE_PORT}"
      - "traefik.http.routers.langfuse-server.rule=Host(`${LANGFUSE_DOMAIN}`)"
      - "traefik.http.routers.langfuse-server.entrypoints=websecure"
      - "traefik.http.routers.langfuse-server.tls.certresolver=myresolver"
      - "traefik.http.routers.langfuse-server.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH_STRING}"

volumes:
  postgres_data:

# after running the airbyte setup, 
# extra envs in airbyte .env
# BASIC_AUTH_STRING=""
# AIRBYTE_DOMAIN=


# proxy replacement
  # airbyte-proxy:
  #   image: airbyte/proxy:${VERSION}
  #   container_name: airbyte-proxy
  #   restart: unless-stopped
  #   ports:
  #     - "8000:8000"
  #     - "8001:8001"
  #     - "8003:8003"
  #     - "8006:8006"
  #   environment:
  #     # - BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME}
  #     # - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}
  #     - BASIC_AUTH_PROXY_TIMEOUT=${BASIC_AUTH_PROXY_TIMEOUT}
  #   networks:
  #     - airbyte_internal
  #     - airbyte_public
  #   depends_on:
  #     - webapp
  #     - server
  #     - airbyte-api-server
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.services.airbyte-proxy.loadbalancer.server.port=8000"
  #     - "traefik.http.routers.airbyte-proxy.rule=Host(`${AIRBYTE_DOMAIN}`)"
  #     - "traefik.http.routers.airbyte-proxy.entrypoints=websecure"
  #     - "traefik.http.routers.airbyte-proxy.tls.certresolver=myresolver"
  #     - "traefik.http.routers.airbyte-proxy.middlewares=auth"
  #     - "traefik.http.middlewares.auth.basicauth.users=${BASIC_AUTH_STRING}"
